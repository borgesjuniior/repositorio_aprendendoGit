
git init // comando para iniciar o repositorio
git status // comando para saber como está o estado atual 
git log // mostra dados do commit atual
git add  {arquivo} //adiciona a staging area
git add .       //adiciona todos os arquivos a staging area 
git commit      // adiciona o arquivo ao repositorio
git commit -m  // permite adiciona uma mensagem ao commit
git diff        // ele permite ver as alterações que foram feitas. 
git diff --stages // diferenças entre a staged e o repository
git log --name-status // mostra todos os arquivos modificados no log dos commit
git diff {commit} // mostra as modificacoes que foram feitas do commit para o atual. (preciso só digitar as primeiras 8 letras)
git diff {commit} {commit} // mostra as modificacoes que foram feitas entre os commit

rm {file} //remove o arquivo para a staging area
git rm {file} //remove o arquivo para o repository
git add --all  //adiciona todos os arquivos até os removidos.
git add -A     //adiciona todos os arquivos até os removidos.

rm -r {directory} // para remover um diretorio
git rm -r {directory} // para remover um diretorio ja do staging area
add -f {file}  // para forçar adicionar um arquivo 
git rm -rf {directory} --cached // remove os arquivos da staging area sem remover o arquivo localmente

git commit -a -m "message" // ele commit direto sem precisar adicionar na staging area
git commit -am "message" // ele commit direto sem precisar adicionar na staging area


git config --global core.excludesfile // para indicar um .gitignore global da sua maquina. 
git config --global core.editor         // para por o editor
git log --pretty=oneline  //ele tras o log em uma linha
git log --abrev-commit      //ele reduz o nome do commit pra trazer só os primeiros 7 caracteres
git log --stat              //ele da mais dados sobre o commit
git log -p -3                 //ele mostra a alteração toda


git branch {nome}


-f // força uma ação
-r // diretorio
-A // tudo



touch  // cria arquivos
mkdir //cria diretorios